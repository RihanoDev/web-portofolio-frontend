name: Deploy to Production

on:
  push:
    tags:
      - 'v*'  # Trigger ketika ada tag yang dimulai dengan 'v' (misal: v1.0.0, v2.1.3)

env:
  REGISTRY: docker.io
  IMAGE_NAME: rihanodev/web-porto-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci --legacy-peer-deps
        
    - name: Build project
      run: |
        npm run build
      
    - name: Extract tag version
      id: extract_version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
          ${{ env.IMAGE_NAME }}:latest
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ steps.extract_version.outputs.VERSION }}
          org.opencontainers.image.revision=${{ github.sha }}
          
    - name: Deploy to server (optional)
      if: github.ref_type == 'tag'
      run: |
        echo "Deploying version ${{ steps.extract_version.outputs.VERSION }}"
        # Tambahkan script deployment ke server di sini
        # Contoh: SSH ke server dan update docker-compose
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_version.outputs.VERSION }}
        release_name: Release ${{ steps.extract_version.outputs.VERSION }}
        body: |
          ## Changes in ${{ steps.extract_version.outputs.VERSION }}
          
          - ✅ PDF viewer mobile optimization
          - ✅ Theme selector mobile visibility fixes
          - ✅ Navbar appearance improvements
          - ✅ Glass theme enhancements
          
          **Docker Image:** `${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}`
          
          ### How to deploy:
          ```bash
          docker pull ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
          docker run -p 80:80 ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
          ```
        draft: false
        prerelease: false
